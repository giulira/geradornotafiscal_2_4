package br.com.itau.geradornotafiscal.model;

import static org.junit.Assert.assertNotNull;

import java.math.BigDecimal;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import br.com.itau.geradornotafiscal.service.CalcularFreteService;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class CalcularFreteServiceTest {	

    @InjectMocks
    private PedidoTemplate pedidoTemplate; 
        
    @Mock
    private Regiao regiao;
    
    @Mock
    private CalcularFreteService calcularFrete; 
    
    @Test
    public void calculaFreteRegiaoSulWithSuccess() {
    regiao.SUL
    Mockito.when(calcularFrete.calcularFreteComPercentual(regiao.SUL, pedidoTemplate.template1()),  Mockito.any(Regiao.class)))
    }
/*Mockito.when(provider.getAssociacoesDaConta(Mockito.any(ContaAssociadaFilter.class), Mockito.any(AssociacoesEnum.class)))
 * .thenReturn(getAssociacoesDaConta());
	Assert.assertEquals("ContaAssociadaDTO [nmTabelaDaAssociacao=Contas Cont√°beis por Credor, deFatosComContaAssociada=[26 - Joice Farias]]", service.getAssociacoesDaConta(new ContaAssociadaFilter()).get(0).toString());
}



Respond*/
}
