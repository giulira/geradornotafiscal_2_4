package br.com.itau.geradornotafiscal.service;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;

import java.math.BigDecimal;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import br.com.itau.geradornotafiscal.model.ItemNotaFiscal;
import br.com.itau.geradornotafiscal.model.Pedido;
import br.com.itau.geradornotafiscal.model.PedidoTemplate;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class CalcularAliquotaPessoaFisicaServiceTest {

	@InjectMocks
	private CalcularAliquotaBasePessoaFisicaService calcularAliquotaBaseService;

	@InjectMocks
	private PedidoTemplate pedidoTemplate;
	
	@Test
	public void shouldCalcularAliquotaBasePessoaFisicaWithSuccess() {
		Pedido pedido = pedidoTemplate.template1();
		List<ItemNotaFiscal> itemNotaFiscalList = calcularAliquotaBaseService
				.calcularAliquota(pedido.getItens(), BigDecimal.valueOf(300));
		assertFalse(itemNotaFiscalList.isEmpty());
	}
	
	@Test
	public void shouldCalcularAliquotaBasePessoaFisicaWithError() {
		Pedido pedido = pedidoTemplate.template1();
		List<ItemNotaFiscal> itemNotaFiscalList = calcularAliquotaBaseService
				.calcularAliquota(null, BigDecimal.valueOf(300));
		assertTrue(itemNotaFiscalList.isEmpty());
	}
	
}
